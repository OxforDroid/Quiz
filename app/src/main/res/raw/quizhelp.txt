переходы
сайт www.google.com
телефон +79146155233
емейл kaverzzcom@gmail.com
Base Java Core
•	JDK, JRE, JVM.
•	Типы данных, создание переменные.
•	Операторы в Java, логические операторы.
•	String.
•	URI, Url.
•	Date, Time, Calendar.
•	Наборы символов в Java
•	Циклы
•	Object. Его методы.
•	Math
•	Enum Concepts.
•	Advanced enum.
•	Class. Reflection API.
•	InputStream, OutputStream (знакомство).
•	Unicode.
•	ASCII.
•	Регулярные выражения
•	Pattern, Matcher
•	String Tokeniser
•	Обертки
•	Ошибки в Java.
•	Иерархия ошибок.
•	Runtime vs Checkrd errors.
•	Перехват ошибок.
•	Масивы.
•	Многомерные массивы.
•	Collection API.
•	Iterable.
•	List Concepts.
•	List Implementation.
•	Map Concepts.
•	Map Implementation.
•	Set Consepts.
•	Set implementation.
•	Ordering, synchronisation. Arrays, Collections.

ООП.
•	Принципы ООП.
•	Реализация ООП-принципов в Java.
•	Обьект и класс. Пакет.
•	Создание нового класа. Get- и set-методы
•	Возврат значений.
•	Методы и поля обьекта. Конструкторы.
•	Локальные переменные.
•	Static and final fields.
•	Области видимости.
•	Upcasting and outcasting.
•	ООП (2-я часть).
•	Абстрактные классы, интерфейсы.
•	Анонимные и внутренние классы.


1.Язык JAVA как объектно-ориентированный язык программирования.
2. Сущность и основные принципы языка JAVA.
3. Понятие платформы программирования.
4. Платформа J2SE. Основные достоинства, недостатки и особенности языка JAVA.
5. Основные области применения языка Java.
6. Основные понятия языка Java. Классы, объекты, интерфейсы, пакеты.
7. Структура файла исходного кода.
8. Виды приложений на языке Java.
9. Структура приложения в платформе J2SE.
10. Пример приложения на языке Java. Компиляция и отладка приложений.
11. Основные элементы языка. Лексемы. Идентификаторы. Ключевые слова.
12. Основные элементы языка. Константы.
13. Основные элементы языка. Примитивные типы данных целые, символьный, вещественные, логические.
14. Основные элементы языка. Объявление и инициализация переменных. Время жизни переменных.
15. Операторы языка Java. Приоритет и правила ассоциативности. Порядок вычисления операндов.
16. Оператор присваивания =. Присваивание примитивных значений, присваивание ссылок, многократные присваивания.
17. Арифметические операторы. Приоритет и ассоциативность арифметических операторов.
18. Арифметические операторы. Порядок вычислений в арифметических выражениях.
19.Арифметические операторы. Диапазон числовых значений.
20. Арифметические операторы. Унарные и бинарные арифметические операторы.
21. Арифметические операторы. Составные операторы присваивания. Операторы декремента и инкремента.
22. Операторы отношения. Равенство. Равенство значений примитивных типов данных.
23. Равенство ссылок на объекты. Равенство значений объектов.
24. Булевы логические операторы. Логические составные операторы присваивания. Условные операторы && и || . Условный оператор ?/
25.Целочисленные поразрядные операторы. Операторы ~,&, |,^. Операторы сдвига <<, >>,>>>.
26. Унарный оператор приведения (тип ).
27.Преобразования сужения и расширения.
28. Числовые расширения.
29. Примеры преобразования типов. Неявное преобразование типов. Правила приведения.
30. Массивы. Объявление переменных -массивов.
31. Создание массива. Инициализация массива.
32. Использование массивов. Анонимные массивы. Многомерные массивы.
33. Операторы ветвления – сокращенный оператор if.
34. Оператор if –else.
35. Оператор switch.
36. Операторы цикла. Оператор while. Оператор do-while.
37. Оператор цикла for.
38. Команды перехода. Маркированные операторы. Операторы break, continue, return.
39.Определение классов. Модификаторы объявления классов.
40. Структура класса – поля, методы, конструкторы, блоки инициализации.
41. Определение полей. Модификаторы объявления полей. Инициализация значений.
42. Блоки инициализации.
43.Неизменяемые поля.
44. Методы класса. Модификаторы объявления методов классов.
45.Методы класса. Передача параметров.
46. Статические методы.
47.Неизменяемые методы.
48. Абстрактные методы.
49.Модификаторы и правила видимости.
50. Объектная ссылка this.
51. Перегрузка методов.
52.Конструкторы.
53. Конструктор по умолчанию. Перегруженные конструкторы.
54. Блоки инициализации.
55.Объекты. Создание объектов. Время жизни объекта и сборка мусора.
56. Одиночное наследование. Переопределение и скрытие методов.
57. Сокрытие (инкапсуляция) полей;
58. Cокрытие статического метода.
59. Объектная ссылка super. Организация цепочки конструкторов.
60. Интерфейсы.
61. Вложенные классы и интерфейсы.
62. Назначение исключительных ситуации.
63. Типы исключительных ситуаций.
64. Исключительная ситуация как объект.
65. Основные классы исключительных ситуаций. Классы Exception, RuntimeException, Error.
66. Определение новых классов исключительных ситуаций.
67. Обработка исключений –try, catch, finally. Оператор throw. Генерация исключительной ситуации.
68.Диагностические утверждения.
69. Основные классы пакета java.lang. Класс Object.
70.Классы оболочки над примитивными типами.
71. Неизменяемые строки - класс String.
72. Изменяемые строки – класс StringBuffer.
73. Класс Math – реализация основных математических функций.
74. Инструментальный набор коллекций. Классы и интерфейсы для реализации коллекций и карт.
75. Коллекции –основные действия, массовые операции, операции с массивами, итераторы.
76. Множества – классы HashSet и LinkedHashSet.
77. Списки- ArrayList, LinkedList
78. Карты. Классы HashMap, LinkedHashMap и Hashtable.
79. Отсортированные множества и отсортированные карты.
80. Интерфейсы Comparator, Comparable, SortedSet, SortedMap.
81. Работа с коллекциями.
82.Организация чтения/записи байтовых потоков.
83. Классы InputSteamReader и OutputStreamReader.
84. Буферизованные потоки чтения и записи – класс BufferedReader.
85.Чтение и запись из файлов.
86.Организация взаимодействия с консолью.
87. Многозадачность. Обзор потоков.
88.Главный поток.
89. Создание потока, реализация интерфейса Runnable.
